name: Daily Commit Report

on:
  schedule:
    - cron: '59 4 * * *'
  workflow_dispatch:

jobs:
  check_commits:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Clonar el repositorio
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üõ† Configurar Git y Zona Horaria
        run: |
          sudo timedatectl set-timezone America/Lima
          export TZ='America/Lima'
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          git fetch --all --prune --tags --force
          git pull --all

      - name: üìä Generar reporte detallado de commits
        id: generate-report
        run: |
          TODAY_PERU=$(date +"%Y-%m-%d")
          START_TIME="${TODAY_PERU} 00:00:00 -0500"
          END_TIME="${TODAY_PERU} 23:59:59 -0500"
          CURRENT_TIME_PERU=$(date +"%Y-%m-%d %H:%M:%S %z")
          
          echo "REPORT_DATE=${TODAY_PERU}" >> $GITHUB_ENV
          
          USERS=("DianaCY-ai" "Dihani")
          EMAILS=("diana.carrasco@inetum.com" "dihani.cy@gmail.com")
          
          REPORT="""<html>
          <head>
          <style>
            /* Estilos previos... */
            .branch-brDihani { background-color: #ffecb3; }
          </style>
          </head>
          <body>
            <h2>üîç <strong>REPORTE DE COMMITS - $TODAY_PERU</strong></h2>
            <p class="timestamp">Generado el: $CURRENT_TIME_PERU (hora local Per√∫)</p>"""

          # Funci√≥n mejorada para obtener la rama exacta
          get_exact_branch() {
            local commit_hash=$1
            local branch_name=""
            
            # 1. Buscar en logs reflog para encontrar la rama exacta
            branch_name=$(git reflog --date=local | grep "$commit_hash" | grep -o "checkout: moving from .* to" | sed -e 's/checkout: moving from //' -e 's/ to//' | tail -1)
            
            # 2. Si no se encontr√≥, buscar en branches que contengan el commit
            if [ -z "$branch_name" ]; then
              branch_name=$(git branch -r --contains "$commit_hash" | sed 's/^[ \t]*origin\///' | grep -v "HEAD" | head -n1)
            fi
            
            # 3. Limpieza del nombre
            branch_name=$(echo "$branch_name" | sed -e 's/~[0-9]//g' -e 's/\^[0-9]//g' -e 's/HEAD -> //')
            
            # 4. Validaci√≥n final
            if [ -z "$branch_name" ] || [[ "$branch_name" =~ ^[0-9a-f]{40}$ ]]; then
              echo "main"
            else
              echo "$branch_name"
            fi
          }

          # Funci√≥n para obtener archivos modificados (igual que antes)
          get_modified_files() {
            local commit_hash=$1
            local files=$(git diff-tree --no-commit-id --name-only -r "$commit_hash")
            [ -z "$files" ] && files=$(git show --pretty="format:" --name-only "$commit_hash")
            echo "$files" | grep -v '^$' | sort | uniq
          }

          for i in "${!USERS[@]}"; do
            USERNAME="${USERS[$i]}"
            EMAIL="${EMAILS[$i]}"

            COMMITS=$(git log --since="$START_TIME" --until="$END_TIME" --author="$USERNAME" \
                      --pretty=format:"%H|%s|%cd|%d|%p" --date=format:'%Y-%m-%d %H:%M:%S %z' --all)

            if [ -n "$COMMITS" ]; then
              REPORT+="<h3>‚úÖ <strong>$USERNAME</strong> (${EMAIL})</h3>"
              REPORT+="<table>"
              REPORT+="<tr><th>Mensaje</th><th>ID Commit</th><th>Fecha/Hora</th><th>Rama</th><th>Archivos</th></tr>"
              
              while IFS="|" read -r HASH MESSAGE DATE REF PARENTS; do
                # Obtener rama exacta
                BRANCH=$(get_exact_branch "$HASH")
                
                # Determinar clase CSS seg√∫n la rama
                if [ "$BRANCH" = "main" ]; then
                  BRANCH_CLASS="branch-main"
                elif [ "$BRANCH" = "brDihani" ]; then
                  BRANCH_CLASS="branch-brDihani"
                elif [ $(echo "$PARENTS" | wc -w) -gt 1 ]; then
                  BRANCH_CLASS="merge-commit"
                else
                  BRANCH_CLASS="branch-feature"
                fi
                
                # Obtener archivos modificados
                FILES=$(get_modified_files "$HASH")
                FILE_LIST="<ul class='files-list'>"
                [ -n "$FILES" ] && FILE_LIST+=$(echo "$FILES" | sed 's/^/<li>/;s/$/<\/li>/')
                [ -z "$FILES" ] && FILE_LIST+="<li>No se detectaron archivos modificados</li>"
                FILE_LIST+="</ul>"
                
                REPORT+="<tr class='commit-row'>"
                REPORT+="<td>$MESSAGE"
                [ $(echo "$PARENTS" | wc -w) -gt 1 ] && REPORT+=" <strong>(Merge)</strong>"
                REPORT+="</td>"
                REPORT+="<td><span class='commit-hash'>${HASH:0:7}</span></td>"
                REPORT+="<td>$DATE</td>"
                REPORT+="<td class='$BRANCH_CLASS'>$BRANCH</td>"
                REPORT+="<td>$FILE_LIST</td>"
                REPORT+="</tr>"
              done <<< "$COMMITS"
              
              REPORT+="</table>"
            else
              REPORT+="<h3 class='no-changes'>‚ùå $USERNAME (${EMAIL}) NO realiz√≥ commits hoy.</h3>"
            fi
          done

          REPORT+="</body></html>"

          echo "$REPORT" > commit_report.html
          echo "commit_report<<EOF" >> $GITHUB_ENV
          cat commit_report.html >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          # Debug: Mostrar ramas detectadas
          echo "=== Ramas detectadas en commits recientes ==="
          git log --since="$START_TIME" --until="$END_TIME" --pretty=format:"%h - %an: %d" --all | head -n 20

      - name: üìß Enviar reporte por correo
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: dihani.cy@gmail.com
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: "üì¢ Reporte Diario de Commits - ${{ env.REPORT_DATE }}"
          html_body: ${{ env.commit_report }}
          to: diana.carrasco@inetum.com, devdes673@gmail.com
          from: "GitHub Actions - Reporte Commits <dihani.cy@gmail.com>"
          priority: high
