name: Daily Commit Report

on:
  schedule:
    # Se ejecuta a las 23:59:59 hora de Per√∫ (UTC-5) que equivale a 04:59:59 UTC
    - cron: '59 4 * * *'
  workflow_dispatch:  # Permite ejecuci√≥n manual desde GitHub Actions

jobs:
  check_commits:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Clonar el repositorio
        uses: actions/checkout@v3
        with:
          # Fetch todas las ramas y tags para asegurar que tenemos toda la historia
          fetch-depth: 0  # Importante: obtiene todo el historial, no solo el √∫ltimo commit

      - name: üõ† Configurar Git
        run: |
          # Configuraci√≥n completa del repositorio
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          # Forzar fetch de todos los cambios remotos
          git fetch --all --prune --tags --force
          # Obtener todos los branches
          git pull --all

      - name: üìä Generar reporte detallado de commits por dia
        run: |
          # Configuraci√≥n de zona horaria para Per√∫ (UTC-5)
          export TZ='America/Lima'
          
          # Fechas ajustadas para Per√∫
          TODAY_PERU=$(date +"%Y-%m-%d")
          START_TIME="${TODAY_PERU} 00:00:00 -0500"  # Inicio del d√≠a en Per√∫
          END_TIME="${TODAY_PERU} 23:59:59 -0500"    # Fin del d√≠a en Per√∫
          CURRENT_TIME_PERU=$(date +"%Y-%m-%d %H:%M:%S %z")
          
          # Lista de usuarios y sus correos
          USERS=("DianaCY-ai" "Dihani")
          EMAILS=("diana.carrasco@inetum.com" "dihani.cy@gmail.com")
          
          # Inicio del reporte HTML
          REPORT="""<html>
          <head>
          <style>
            body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
            h2 { color: #2c3e50; border-bottom: 2px solid #eee; padding-bottom: 10px; }
            h3 { color: #3498db; margin-top: 20px; }
            table { border-collapse: collapse; width: 100%; margin: 15px 0; box-shadow: 0 1px 3px rgba(0,0,0,0.1); }
            th { background-color: #3498db; color: white; text-align: left; padding: 10px; }
            td { padding: 10px; border-bottom: 1px solid #ddd; }
            .commit-row:hover { background-color: #f5f5f5; }
            .files-list { margin: 0; padding-left: 20px; list-style-type: square; }
            .no-changes { color: #7f8c8d; }
            .commit-hash { font-family: monospace; color: #2980b9; }
            .timestamp { font-size: 0.9em; color: #95a5a6; text-align: right; }
          </style>
          </head>
          <body>
            <h2>üîç <strong>REPORTE DE COMMITS - $TODAY_PERU</strong></h2>
            <p class="timestamp">Generado el: $CURRENT_TIME_PERU (hora local Per√∫)</p>"""

          # Iterar sobre cada usuario
          for i in "${!USERS[@]}"; do
            USERNAME="${USERS[$i]}"
            EMAIL="${EMAILS[$i]}"

            # Obtener commits del usuario en el rango del d√≠a completo (00:00 - 23:59 hora Per√∫)
            COMMITS=$(git log --since="$START_TIME" --until="$END_TIME" --author="$USERNAME" \
                      --pretty=format:"%H|%s|%cd|%d" --date=format:'%Y-%m-%d %H:%M:%S %z' --all)

            if [ -n "$COMMITS" ]; then
              REPORT+="<h3>‚úÖ <strong>$USERNAME</strong> (${EMAIL})</h3>"
              REPORT+="<table>"
              REPORT+="<tr><th>Mensaje</th><th>ID Commit</th><th>Fecha/Hora</th><th>Rama</th><th>Archivos</th></tr>"
              
              # Procesar cada commit
              while IFS="|" read -r HASH MESSAGE DATE REF; do
                # Extraer nombre de la rama
                BRANCH=$(echo "$REF" | grep -oP "(?<=origin/)[^, ]+" | head -n 1)
                [ -z "$BRANCH" ] && BRANCH="Desconocida"
                
                # Obtener archivos modificados
                FILES=$(git diff-tree --no-commit-id --name-only -r "$HASH")
                FILE_LIST="<ul class='files-list'>"
                while read -r FILE; do
                  FILE_LIST+="<li>$FILE</li>"
                done <<< "$FILES"
                FILE_LIST+="</ul>"
                
                # Agregar fila a la tabla
                REPORT+="<tr class='commit-row'>"
                REPORT+="<td>$MESSAGE</td>"
                REPORT+="<td><span class='commit-hash'>${HASH:0:7}</span></td>"  # Muestra solo los primeros 7 caracteres
                REPORT+="<td>$DATE</td>"
                REPORT+="<td>$BRANCH</td>"
                REPORT+="<td>$FILE_LIST</td>"
                REPORT+="</tr>"
              done <<< "$COMMITS"
              
              REPORT+="</table>"
            else
              REPORT+="<h3 class='no-changes'>‚ùå $USERNAME (${EMAIL}) NO realiz√≥ commits hoy.</h3>"
            fi
          done

          REPORT+="</body></html>"

          # Guardar reporte en archivo y variable de entorno
          echo "$REPORT" > commit_report.html
          echo "commit_report<<EOF" >> $GITHUB_ENV
          cat commit_report.html >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          # Debug: Mostrar resumen en logs
          echo "Reporte generado para el d√≠a $TODAY_PERU (00:00 - 23:59 hora Per√∫)"

      - name: üìß Enviar reporte por correo
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: dihani.cy@gmail.com
          password: ${{ secrets.GMAIL_PASSWORD }}
          subject: "üì¢ Reporte Diario de Commits - $(date -d '-5 hours' +'%Y-%m-%d')"
          html_body: ${{ env.commit_report }}
          to: diana.carrasco@inetum.com, devdes673@gmail.com
          from: "GitHub Actions - Reporte Commits <dihani.cy@gmail.com>"
          # Prioridad alta
          priority: high